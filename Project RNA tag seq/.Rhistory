gsg <- goodSamplesGenes(t(data))
summary(gsg)
gsg$allOK
table(gsg$goodGenes)
table(gsg$goodSamples)
# remove genes that are detected as outliers
data <- data[gsg$goodGenes == TRUE,]
# detect outlier samples - hierarchical clustering - method 1
htree <- hclust(dist(t(data)), method = "average")
plot(htree)
# no outliers removed???? -- wait -- come back after retesting ARC WGCNA with some "outliers" removed
# pca - method 2 for finding outliers
pca <- prcomp(t(data))
pca.dat <- pca$x
pca.var <- pca$sdev^2
pca.var.percent <- round(pca.var/sum(pca.var)*100, digits = 2)
pca.dat <- as.data.frame(pca.dat)
ggplot(pca.dat, aes(PC1, PC2)) +
geom_point() +
geom_text(label = rownames(pca.dat)) +
labs(x = paste0('PC1: ', pca.var.percent[1], ' %'),
y = paste0('PC2: ', pca.var.percent[2], ' %'))
#here, seems like 210, 193, and maybe 196 (??)
# exclude outlier samples
samples.to.be.excluded <- c("KM193","KM196","KM210")
data.subset <- data[,!(colnames(data) %in% samples.to.be.excluded)]
phenoData <- phenoData %>%
column_to_rownames(var = "subject")
# exclude outlier samples
colData <- phenoData %>%
filter(!row.names(.) %in% samples.to.be.excluded)
# fixing column names in colData
names(colData)
# selecting relevant info
colData <- colData %>%
select(3, 10, 11, 13, 14, 15, 20, 22)
# making the rownames and column names identical
all(rownames(colData) %in% colnames(data.subset))
all(rownames(colData) == colnames(data.subset))
# create dds
dds <- DESeqDataSetFromMatrix(countData = data.subset,
colData = colData,
design = ~ 1) # not specifying model "because we need this DSeq data set to perform variance stabilizing transformation"
## remove all genes with counts < 10 in more than 3 samples -- here, same as DEseq2 guide
dds75 <- dds[rowSums(counts(dds) >= 5) >= 3,]
nrow(dds75) #
# perform variance stabilization
dds_norm <- vst(dds75)
# get normalized counts
norm.counts <- assay(dds_norm) %>%
t()
norm.counts2 <- norm.counts
norm.counts2 <- as.data.frame(norm.counts2)
norm.counts3 <- tibble::rownames_to_column(norm.counts2, "subject")
colData2 <- tibble::rownames_to_column(colData, "subject")
normcounts.coldata.ARC <- cbind(colData2, norm.counts3)
write.csv(normcounts.coldata.ARC, "results/normcounts_coldata_ARC.csv")
#### shouldn't need to do above again ####
normcounts.coldata.ARC <- read.csv("results/normcounts_coldata_ARC.csv")
normcounts.coldata.ARC$X <- NULL
ARC_limma_results1 <- readRDS("results/ARC_limma_results.RDS")
ARC_limma_results1 <- ARC_limma_results1 %>%
select(1,2,3,9,10)
ARC_MEdarkred_limma <- read.csv("results/ARC_MEdarkred_limma.csv") #LOWER expression in Stress
normcounts.coldata.ARC <- read.csv("results/normcounts_coldata_ARC.csv")
normcounts.coldata.ARC$X <- NULL
ARC_limma_results1 <- readRDS("results/ARC_limma_results.RDS")
ARC_limma_results1 <- ARC_limma_results1 %>%
select(1,2,3,9,10)
ARC_MEyellow_limma <- read.csv("results/ARC_MEyellow_limma.csv") #LOWER expression in Stress
ARC_MEyellow_limma$X <- NULL
ARC_MEpurple_limma <- read.csv("results/ARC_MEpurple_limma.csv") #HIGHER expression in Stress
ARC_MEpurple_limma$X <- NULL
ARC_MEblue_limma <- read.csv("results/ARC_MEblue_limma.csv") #HIGHER expression in Stress
ARC_MEblue_limma$X <- NULL
### top 50 biggest logFC genes
ARC_limma_results1 %>%
arrange(logFC) %>%
head(25)
ARC_limma_results1 %>%
arrange(-logFC) %>%
head(25)
# Aqp1 - save as w400 h600
ggplot(normcounts.coldata.ARC, aes(group, Aqp1, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 0.8) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="C. ARC - Aqp1",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
# Trim10 - save as w400 h600
ggplot(normcounts.coldata.ARC, aes(group, Trim10, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 0.8) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="D. ARC - Trim10",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
# Trim10 - save as w400 h600
ggplot(normcounts.coldata.ARC, aes(group, Trim10, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 0.8) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="D. ARC - Trim10",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
# Ncf2 - save as w400 h600
ggplot(normcounts.coldata.ARC, aes(group, Ncf2, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 0.8) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="D. ARC - Ncf2",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
# Ncf2 - save as w400 h600
ggplot(normcounts.coldata.ARC, aes(group, Npy, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 0.8) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="D. ARC - Npy",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
# Sst - save as w400 h600
ggplot(normcounts.coldata.ARC, aes(group, Sst, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 0.8) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="D. ARC - Sst",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
# Etfbkmt - save as w400 h600
ggplot(normcounts.coldata.ARC, aes(group, Etfbkmt, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 0.8) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="D. ARC - Etfbkmt",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
# Irx2 - save as w400 h600
ggplot(normcounts.coldata.ARC, aes(group, Irx2, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 0.8) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="E. ARC - Irx2",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
# Irx2 - save as w400 h600
ggplot(normcounts.coldata.ARC, aes(group, Irx2, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 1.5) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="E. ARC - Irx2",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
# Crlf1 - save as w400 h600
ggplot(normcounts.coldata.ARC, aes(group, Crlf1, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 0.8) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="F. ARC - Crlf1",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
# Crlf1 - save as w400 h600
ggplot(normcounts.coldata.ARC, aes(group, Crlf1, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 1.5) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="F. ARC - Crlf1",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
# Rpsa - save as w400 h600
ggplot(normcounts.coldata.ARC, aes(group, Rpsa, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 1.5) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="C. ARC - Rpsa",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
# Uba52 - save as w400 h600
ggplot(normcounts.coldata.ARC, aes(group, Uba52, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 1.5) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="D. ARC - Uba52",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
# Trip6 - save as w400 h600
ggplot(normcounts.coldata.ARC, aes(group, Trip6, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 1.5) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="E. ARC - Trip6",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
# Phgdh - save as w400 h600
ggplot(normcounts.coldata.ARC, aes(group, Phgdh, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 1.5) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="F. ARC - Phgdh",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
# Eif3a - save as w400 h600
ggplot(normcounts.coldata.ARC, aes(group, Eif3a, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 1.5) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="G. ARC - Eif3a",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
# Eif3a - save as w400 h600
ggplot(normcounts.coldata.ARC, aes(group, Eif3a, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 0.8) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="G. ARC - Eif3a",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
# Atrx - save as w400 h600
ggplot(normcounts.coldata.ARC, aes(group, Atrx, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 1.5) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="H. ARC - Atrx",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
# Atrx - save as w400 h600
ggplot(normcounts.coldata.ARC, aes(group, Atrx, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 0.8) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="H. ARC - Atrx",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
library(limma)
library(edgeR)
library(Mus.musculus)
organism = 'org.Mm.eg.db'
library(organism, character.only = TRUE)
library(biomaRt)
library(AnnotationDbi)
library(pheatmap)
library(annotables)
library(clusterProfiler)
library(enrichplot)
library(DOSE)
library(tidyverse)
grcm38 # mouse genes
source("functions/gettop10GO.R")
my_logFC_threshold = 0.2
y1a <- readRDS("results/LH_limma_results.RDS")
y2a <- readRDS("results/DMH_limma_results.RDS")
y3a <- readRDS("results/ARC_limma_results.RDS")
LH  %>% filter(symbol == "Fkbp5")
LH <- readRDS("results/LH_limma_results.RDS")
DMH <- readRDS("results/DMH_limma_results.RDS")
ARC <- readRDS("results/ARC_limma_results.RDS")
LH  %>% filter(symbol == "Fkbp5")
DMH %>% filter(symbol == "Fkbp5")
ARC %>% filter(symbol == "Fkbp5")
LH <- readRDS("results/LH_limma_results.RDS")
DMH <- readRDS("results/DMH_limma_results.RDS")
ARC <- readRDS("results/ARC_limma_results.RDS")
LH  %>% filter(symbol == "Fkbp5")
DMH %>% filter(symbol == "Fkbp5")
ARC %>% filter(symbol == "Fkbp5")
LH  %>% filter(symbol == "Fkbp5")
DMH %>% filter(symbol == "Fkbp5")
ARC %>% filter(symbol == "Fkbp5")
LH  %>% filter(symbol == "Fkbp5")
DMH %>% filter(symbol == "Fkbp5")
ARC %>% filter(symbol == "Fkbp5")
ARC %>% filter(symbol == "Rpl34")
ARC %>% filter(symbol == "Rps16")
ARC %>% filter(symbol == "Rpl29")
ARC %>% filter(symbol == "Rpsa")
ARC %>% filter(symbol == "Mrpl27")
cts_with_unassigned <- read.csv("ham_brain_data/LH_counts.csv", row.names = "X")
View(cts_with_unassigned)
coldata <- read.csv("ham_brain_data/LH_id.csv", row.names = "X")
View(coldata)
library(WGCNA)
library(DESeq2)
library(GEOquery)
library(CorLevelPlot)
library(gridExtra)
library(clusterProfiler)
library(enrichplot)
library(biomaRt)
library(AnnotationDbi)
library(annotables)
grcm38 <- grcm38
library(ggpubr)
library(tidyverse)
normcounts.coldata.LH <- read.csv("results/normcounts_coldata_LH.csv")
normcounts.coldata.LH$X <- NULL
LH_limma_results1 <- readRDS("results/LH_limma_results.RDS")
LH_limma_results1 <- LH_limma_results1 %>%
select(1,2,3,9,10)
LH_MEyellow_limma <- read.csv("results/LH_MEyellow_limma.csv") #LOWER expression in Stress
LH_MEyellow_limma$X <- NULL
LH_MEmagenta_limma <- read.csv("results/LH_MEmagenta_limma.csv") #HIGHER expression in Stress
LH_MEmagenta_limma$X <- NULL
ggplot(normcounts.coldata.LH, aes(group, Mog, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 1.5) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="C. LH - Mog",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
View(LH_MEyellow_limma)
View(normcounts.coldata.LH)
# visualize
LH_MEyellow_limma %>% filter(symbol == "Mog")
ggplot(normcounts.coldata.LH, aes(group, Mog, fill=group)) +
annotate("text", x = 4, y = 25, label = "eFDR = 0.05", parse = TRUE) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="C. LH - Mog",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
ggplot(normcounts.coldata.LH, aes(group, Mog, fill=group)) +
#  annotate("text", x = 4, y = 25, label = "eFDR = 0.054", parse = TRUE) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="C. LH - Mog",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
ggplot(normcounts.coldata.LH, aes(group, Mog, fill=group)) +
annotate("text", x = 1.5, y = 10.5, label = "eFDR = 0.054", parse = TRUE) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="C. LH - Mog",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
ggplot(normcounts.coldata.LH, aes(group, Mog, fill=group)) +
annotate("text", x = "Stress", y = 10.5, label = "eFDR = 0.054", parse = TRUE) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="C. LH - Mog",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
ggplot(normcounts.coldata.LH, aes(group, Mog, fill=group)) +
annotate("text", x = "Stress", y = 10.5, label = "eFDR == 0.054", parse = TRUE) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="C. LH - Mog",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
ggplot(normcounts.coldata.LH, aes(group, Mog, fill=group)) +
annotate("text", x = "Stress", y = 10.6, label = "eFDR == 0.054", size = 6, parse = TRUE) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("blue3", "orange2")) +
labs(title="C. LH - Mog",x="Group", y = "Normalized gene expression") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
