column_names <- colnames(heatmap.data2)
new_column_names <- sapply(column_names, function(col) {
# Extract the color part (e.g., "MEblack" -> "black")
color <- sub("ME", "", col)
# If the color exists in the color_counts, add the count to the column name
if (color %in% names(color_counts)) {
paste0(col, "(", color_counts[color], ")")
} else {
col # Leave the column name unchanged if the color is not found
}
})
colnames(heatmap.data2) <- new_column_names
names(heatmap.data2)
# power 6 - 11 MEs? some def too big tho? -- BUT 3 are sig diff?
# power 10 - 12 MEs - only 2 sig difs?
# power 4 only 13 MEs??? - 2 sig dif.
# stick with 6 i guess
### NEED TO adjust this step depending on dimensions of heatmap.data
## IN THE FOLLOWING: POSITIVE VALUES MEAN ME EXPRESSION IS HIGHER IN TRAIT CODED WITH 1 COMPARED TO TRAIT CODED WITH 0 - specifically positive = higher in stressed
### SAVE 550x800
CorLevelPlot(heatmap.data2,
x = names(heatmap.data2)[12:12], #trait data
y = names(heatmap.data2)[1:11], #ME data
col = c("blue3", "skyblue", "white", "#f7ab5e", "orange2"),
main = "E. ARC -
WGCNA Module Eigengenes",
fontCorval = 1,
cexCorval = 1.6,
cexLabY = 1.5)
## so for ARC, modules yellow, purple, and blue are significantly altered by stress
module.gene.mapping <- as.data.frame(bwnet$colors)
## FROM HERE, CAN PERFORM FURTHER ANALYSIS ON GENES IN IMPORTANT MODULES - the following lists the genes in relevant modules that are selected from above analysis to be modules that are differentially expressed between groups
## THIS ME has LOWER expression in Stress
module.gene.mapping %>%
filter(`bwnet$colors` == 'yellow') %>%
rownames()
module.gene.mapping %>%
filter(`bwnet$colors` == 'purple') %>%
rownames
## THIS ME has HIGHER expression in Stress
module.gene.mapping %>%
filter(`bwnet$colors` == 'blue') %>%
rownames()
# 6B. Intramodular analysis: Identifying driver genes ---------------
#"highly connected intramodular hub genes"
# Calculate the module membership and the associated p-values
# The module membership/intramodular connectivity is calculated as the correlation of the eigengene and the gene expression profile.
# This quantifies the similarity of all genes on the array to every module.
module.membership.measure <- cor(module_eigengenes, norm.counts, use = 'p')
module.membership.measure.pvals <- corPvalueStudent(module.membership.measure, nSamples)
module.membership.measure[1:10,1:10]
module.membership.measure.pvals[1:10,1:10] # just a check that this ran right
# Calculate the gene significance and associated p-values
#correlate expression data with trait of interest - FOR ME, JUST stress_bin
gene.signf.corr <- cor(norm.counts, traits$stress_bin, use = 'p')
gene.signf.corr.pvals <- corPvalueStudent(gene.signf.corr, nSamples)
gene.signf.corr.pvals %>%
as.data.frame() %>%
arrange(V1) %>%
head(25)
#top 25 genes in the ARC sig associated with stress experience
### NEED TO DO SOMETHING SIMILAR TO THIS *JUST* WITHIN SIG MODULES - GET "HIGHEST MM GENES"   ### basically take module.membership.measure.pvals, flip orientation, filter only relevant module, then arrange(V1)
# Using the gene significance you can identify genes that have a high significance for trait of interest
# Using the module membership measures you can identify genes with high module membership in interesting modules.
#### FOLLOWUP ANALYSIS OF VARIOUS THINGS FOUND ABOVE
library(clusterProfiler)
library(enrichplot)
library(biomaRt)
library(AnnotationDbi)
library(annotables)
grcm38 <- grcm38
source("functions/gettop10GO.R")
#1st - pull ARC_limma_results1 <- readRDS("results/ARC_limma_results.RDS")
#2nd - filter genes that are only in modules of interest - call them MEcolor
#3rd - attach ARC_limma_results1 to filteres MEcolor datasets
#4th - do GO analysis of merged MEcolor-limma datasets
#5th - and highest MM ranking of MEcolor datasets
## steps 1-3
ARC_limma_results1 <- readRDS("results/ARC_limma_results.RDS")
gene.signf.corr2 <- as.data.frame(gene.signf.corr)
gene.signf.corr2 <- tibble::rownames_to_column(gene.signf.corr2, "symbol")
colnames(gene.signf.corr2)[2] <- "gene.signif.corr"
gene.signf.corr.pvals2 <- as.data.frame(gene.signf.corr.pvals)
gene.signf.corr.pvals2 <- tibble::rownames_to_column(gene.signf.corr.pvals2, "symbol")
colnames(gene.signf.corr.pvals2)[2] <- "gene.signif.corr.pval"
MEallcolors2 <- left_join(MEallcolors, gene.signf.corr2, by = "symbol") %>%
left_join(., gene.signf.corr.pvals2, by = "symbol")
write.csv(MEallcolors2, "results/MEallcolors_ARC.csv")
module.membership.measure2 <- as.data.frame(module.membership.measure)
module.membership.measure2 <- tibble::rownames_to_column(module.membership.measure2, "module")
### down in stressed  yellow, purple
### up in stressed    blue
MEyellow <- MEallcolors2 %>%
filter(MEcolor == "yellow")
MEyellow.limma <- ARC_limma_results1 %>%
left_join(MEyellow, by = "symbol") %>%
filter(!is.na(MEcolor)) %>%
select(1,2,3,4,10,11,12,13)
write.csv(MEyellow.limma, "results/ARC_MEyellow_limma.csv")
MEpurple <- MEallcolors2 %>%
filter(MEcolor == "purple")
MEpurple.limma <- ARC_limma_results1 %>%
left_join(MEpurple, by = "symbol") %>%
filter(!is.na(MEcolor)) %>%
select(1,2,3,4,10,11,12,13)
write.csv(MEpurple.limma, "results/ARC_MEpurple_limma.csv")
MEblue <- MEallcolors2 %>%
filter(MEcolor == "blue")
MEblue.limma <- ARC_limma_results1 %>%
left_join(MEblue, by = "symbol") %>%
filter(!is.na(MEcolor)) %>%
select(1,2,3,4,10,11,12,13)
write.csv(MEblue.limma, "results/ARC_MEblue_limma.csv")
## GO ANALYSIS OF yellow MODULE
gettop10GO(MEyellow.limma, my_showCategory) %>%
mutate(comparison = "Control - Stress") -> GOterms_ARC_yellow
View(GOterms_ARC_yellow)
write.csv(GOterms_ARC_yellow, "results/GOterms_ARC_yellow.csv")
## HIGHEST MM OF yellow MODULE
MMyellow <- module.membership.measure2 %>%
filter(module == "MEyellow") %>%
gather(., gene, MM)
MMyellow <- MMyellow[-1,]
MMyellow %>%
arrange(desc(MM)) %>%
head(10)
## GO ANALYSIS OF purple MODULE
gettop10GO(MEpurple.limma, my_showCategory) %>%
mutate(comparison = "Control - Stress") -> GOterms_ARC_purple
View(GOterms_ARC_purple)
write.csv(GOterms_ARC_purple, "results/GOterms_ARC_purple.csv")
## HIGHEST MM OF purple MODULE
MMpurple <- module.membership.measure2 %>%
filter(module == "MEpurple") %>%
gather(., gene, MM)
MMpurple <- MMpurple[-1,]
MMpurple %>%
arrange(desc(MM)) %>%
head(10)
## GO ANALYSIS OF blue MODULE
gettop10GO(MEblue.limma, my_showCategory) %>%
mutate(comparison = "Control - Stress") -> GOterms_ARC_blue
View(GOterms_ARC_blue)
write.csv(GOterms_ARC_blue, "results/GOterms_ARC_blue.csv")
## HIGHEST MM OF blue MODULE
MMblue <- module.membership.measure2 %>%
filter(module == "MEblue") %>%
gather(., gene, MM)
MMblue <- MMblue[-1,]
MMblue %>%
arrange(desc(MM)) %>%
head(10)
#### Module boxplots
source("functions/geom_boxjitter.R")
MEdf <- as.data.frame(module_eigengenes) %>%
tibble::rownames_to_column(., "subject")
cdgrp <- as.data.frame(colData) %>%
tibble::rownames_to_column(., "subject") %>%
select(subject, group)
MEdf2 <- left_join(MEdf, cdgrp, by="subject")
# yellow  - save 325x500
MEdf2 %>%
ggplot(aes(group,MEyellow, fill = group))+
geom_boxjitter(outlier.color = NA, jitter.shape = 21,
alpha = 1,
width = 0.5,
jitter.height = 0.02, jitter.width = 0.02, errorbar.draw = TRUE,
position = position_dodge(0.8)) +
scale_fill_manual(values=c("blue3", "darkorange")) +
labs(title="Yellow:
365 genes",x="Group", y = "Module Eigengene") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
# Purple 325 x 500
MEdf2 %>%
ggplot(aes(group,MEpurple, fill = group))+
geom_boxjitter(outlier.color = NA, jitter.shape = 21,
alpha = 1,
width = 0.5,
jitter.height = 0.02, jitter.width = 0.02, errorbar.draw = TRUE,
position = position_dodge(0.8)) +
scale_fill_manual(values=c("blue3", "darkorange")) +
labs(title="Purple:
66 genes",x="Group", y = "Module Eigengene") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
# Blue 325 x 500
MEdf2 %>%
ggplot(aes(group,MEblue, fill = group))+
geom_boxjitter(outlier.color = NA, jitter.shape = 21,
alpha = 1,
width = 0.5,
jitter.height = 0.02, jitter.width = 0.02, errorbar.draw = TRUE,
position = position_dodge(0.8)) +
scale_fill_manual(values=c("blue3", "darkorange")) +
labs(title="Blue:
1528 genes",x="Group", y = "Module Eigengene") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
library(limma)
library(edgeR)
library(Mus.musculus)
organism = 'org.Mm.eg.db'
library(organism, character.only = TRUE)
library(biomaRt)
library(AnnotationDbi)
library(pheatmap)
library(annotables)
library(clusterProfiler)
library(enrichplot)
library(organism, character.only = TRUE)
library(DOSE)
library(EnhancedVolcano)
library(tidyverse)
grcm38 # mouse genes
my_logFC_threshold = 0.2
LH <- readRDS("results/LH_limma_results.RDS")
y1a <- readRDS("results/LH_limma_results.RDS")
dc <- y1a %>% mutate(contrast = "Control vs. Stressed") %>% mutate(log10 = -log10(P.Value))
dc$diffexpressed <- "NO"
# if log2Foldchange > 0.6 and pvalue < 0.05, set as "UP"
dc$diffexpressed[dc$logFC > 0.2 & dc$P.Value < 0.05] <- "UP"
# if log2Foldchange < -0.6 and pvalue < 0.05, set as "DOWN"
dc$diffexpressed[dc$logFC < -0.2 & dc$P.Value < 0.05] <- "DOWN"
dcx <- dc %>% filter(.,logFC >= 1.75)%>% filter(P.Value < 0.05)
dcxx <- dc %>% filter(.,logFC <= -1.6) %>% filter(P.Value < 0.05)
dc$log10 <- ifelse(dc$log10 == Inf, 4,dc$log10)
# dcx <- dc %>% filter(.,abs(logFC) >= 1.5) %>% filter(P.Value < 0.05)
#875 x 550
ggplot(data = dc,
aes(x = logFC,
y = log10,
colour=diffexpressed)) +
geom_point(alpha=0.25, size=3.5) +
scale_color_manual(values=c("orange2", "grey","blue3"))+
xlim(c(-2.5, 2.5)) +
ylim(0,4)+
# geom_vline(xintercept=c(-2.5,2.5),lty=4,col="black",lwd=0.8) +
geom_vline(xintercept=c(-.75,.75),lty=4,col="black",lwd=0.8) +
geom_vline(xintercept=c(-1.5,1.5),lty=4,col="black",lwd=0.8) +
geom_hline(yintercept = 1.301,lty=4,col="black",lwd=0.8) +
geom_text_repel(data = dcx, aes(x = logFC, y = -log10(P.Value),label = symbol), color = "black",vjust =1, hjust =.45)+
geom_text_repel(data = dcxx, aes(x = logFC, y = -log10(P.Value),label = symbol), color = "black", hjust = 1, vjust = -.55)+
labs(title = "A. Differential Gene Expression in LH",
x="log2 Fold Change",
y=bquote(~-Log[10]~italic(eFDR)))+
theme_bw() +
annotate(geom="text", x=2.5, y=.5, label=paste0(" ", "\n", "Lower in Stressed"),
color="black", size = 5)+
annotate(geom="text", x=-2.5, y=.5, label=paste0(" ", "\n", "Higher in Stressed"),
color="black", size = 5)+
scale_x_continuous(limits = c(-3.5,3.5),breaks = c(-3,-2,-1,0,1,2,3))+
theme(axis.text.x = element_text(vjust = 1,size = 20),
# axis.ticks = element_blank(),
axis.text.y = element_text(hjust = 0.5,size = 20),
axis.text = element_text(color="#3C3C3C",size = 20),
axis.title = element_text(size = 20),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
strip.background = element_blank(),
strip.text.x = element_text(size = 20),
text = element_text(size = 20))
library(limma)
library(edgeR)
library(Mus.musculus)
organism = 'org.Mm.eg.db'
library(organism, character.only = TRUE)
library(biomaRt)
library(AnnotationDbi)
library(pheatmap)
library(annotables)
library(clusterProfiler)
library(enrichplot)
library(organism, character.only = TRUE)
library(DOSE)
library(EnhancedVolcano)
library(tidyverse)
grcm38 # mouse genes
my_logFC_threshold = 0.2
DMH <- readRDS("results/DMH_limma_results.RDS")
y1a <- readRDS("results/DMH_limma_results.RDS")
dc <- y1a %>% mutate(contrast = "Control vs. Stressed") %>% mutate(log10 = -log10(P.Value))
dc$diffexpressed <- "NO"
# if log2Foldchange > 0.6 and pvalue < 0.05, set as "UP"
dc$diffexpressed[dc$logFC > 0.2 & dc$P.Value < 0.05] <- "UP"
# if log2Foldchange < -0.6 and pvalue < 0.05, set as "DOWN"
dc$diffexpressed[dc$logFC < -0.2 & dc$P.Value < 0.05] <- "DOWN"
dcx <- dc %>% filter(.,logFC >= 1.75)%>% filter(P.Value < 0.05)
dcxx <- dc %>% filter(.,logFC <= -1.6) %>% filter(P.Value < 0.05)
dc$log10 <- ifelse(dc$log10 == Inf, 4,dc$log10)
# dcx <- dc %>% filter(.,abs(logFC) >= 1.5) %>% filter(P.Value < 0.05)
vp_DMH <- ggplot(data = dc,
aes(x = logFC,
y = log10,
colour=diffexpressed)) +
geom_point(alpha=0.25, size=3.5) +
scale_color_manual(values=c("orange2", "grey","blue3"))+
xlim(c(-2.5, 2.5)) +
ylim(0,4)+
# geom_vline(xintercept=c(-2.5,2.5),lty=4,col="black",lwd=0.8) +
geom_vline(xintercept=c(-.75,.75),lty=4,col="black",lwd=0.8) +
geom_vline(xintercept=c(-1.5,1.5),lty=4,col="black",lwd=0.8) +
geom_hline(yintercept = 1.301,lty=4,col="black",lwd=0.8) +
geom_text_repel(data = dcx, aes(x = logFC, y = -log10(P.Value),label = symbol), color = "black",vjust =1, hjust =.45)+
geom_text_repel(data = dcxx, aes(x = logFC, y = -log10(P.Value),label = symbol), color = "black", hjust = 1, vjust = -.55)+
labs(title = "A. Differential Gene Expression in DMH",
x="log2 Fold Change",
y=bquote(~-Log[10]~italic(eFDR)))+
theme_bw() +
annotate(geom="text", x=2.5, y=.5, label=paste0(" ", "\n", "Lower in Stressed"),
color="black", size = 5)+
annotate(geom="text", x=-2.5, y=.5, label=paste0(" ", "\n", "Higher in Stressed"),
color="black", size = 5)+
scale_x_continuous(limits = c(-3.5,3.5),breaks = c(-3,-2,-1,0,1,2,3))+
theme(axis.text.x = element_text(vjust = 1,size = 20),
# axis.ticks = element_blank(),
axis.text.y = element_text(hjust = 0.5,size = 20),
axis.text = element_text(color="#3C3C3C",size = 20),
axis.title = element_text(size = 20),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
strip.background = element_blank(),
strip.text.x = element_text(size = 20),
text = element_text(size = 20)
)
vp_DMH  #875 x 550
### Number of genes in each cut off
#0.2
dc %>% filter(.,logFC >= .2)%>% filter(P.Value < 0.05) %>% summarise(n = nrow(.)) # 238
dc %>% filter(between(logFC, .2, .75))%>% filter(P.Value < 0.05) %>% summarise(n = nrow(.)) # 184
dc %>% filter(between(logFC, .75, 1.5))%>% filter(P.Value < 0.05) %>% summarise(n = nrow(.)) # 51
dc %>% filter(between(logFC, 1.5, 3))%>% filter(P.Value < 0.05) %>% summarise(n = nrow(.)) # 3
dc %>% filter(.,logFC <= -.2) %>% filter(P.Value < 0.05)%>% summarise(n = nrow(.)) # 309
dc %>% filter(between(logFC, -0.75, -0.2)) %>% filter(P.Value < 0.05)%>% summarise(n = nrow(.)) # 252
dc %>% filter(between(logFC, -1.5, -0.75)) %>% filter(P.Value < 0.05)%>% summarise(n = nrow(.))# 51
dc %>% filter(between(logFC, -3, -1.5)) %>% filter(P.Value < 0.05)%>% summarise(n = nrow(.)) # 6
#top 10 genes down in stressed
dc %>% filter(P.Value < 0.05) %>% arrange(-logFC) %>% head(., 10)
#top 10 genes up in stressed
dc %>% filter(P.Value < 0.05) %>%  arrange(logFC) %>% head(., 10)
################
y1a %>% filter(symbol == "Gpr50")
y1a %>% filter(entrez == "11604")
#875 x 550
ggplot(data = dc,
aes(x = logFC,
y = log10,
colour=diffexpressed)) +
geom_point(alpha=0.25, size=3.5) +
scale_color_manual(values=c("orange2", "grey","blue3"))+
xlim(c(-2.5, 2.5)) +
ylim(0,4)+
# geom_vline(xintercept=c(-2.5,2.5),lty=4,col="black",lwd=0.8) +
geom_vline(xintercept=c(-.75,.75),lty=4,col="black",lwd=0.8) +
geom_vline(xintercept=c(-1.5,1.5),lty=4,col="black",lwd=0.8) +
geom_hline(yintercept = 1.301,lty=4,col="black",lwd=0.8) +
geom_text_repel(data = dcx, aes(x = logFC, y = -log10(P.Value),label = symbol), color = "black",vjust =1, hjust =.45)+
geom_text_repel(data = dcxx, aes(x = logFC, y = -log10(P.Value),label = symbol), color = "black", hjust = 1, vjust = -.55)+
labs(title = "B. Differential Gene Expression in DMH",
x="log2 Fold Change",
y=bquote(~-Log[10]~italic(eFDR)))+
theme_bw() +
annotate(geom="text", x=2.5, y=.5, label=paste0(" ", "\n", "Lower in Stressed"),
color="black", size = 5)+
annotate(geom="text", x=-2.5, y=.5, label=paste0(" ", "\n", "Higher in Stressed"),
color="black", size = 5)+
scale_x_continuous(limits = c(-3.5,3.5),breaks = c(-3,-2,-1,0,1,2,3))+
theme(axis.text.x = element_text(vjust = 1,size = 20),
# axis.ticks = element_blank(),
axis.text.y = element_text(hjust = 0.5,size = 20),
axis.text = element_text(color="#3C3C3C",size = 20),
axis.title = element_text(size = 20),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
strip.background = element_blank(),
strip.text.x = element_text(size = 20),
text = element_text(size = 20))
library(limma)
library(edgeR)
library(Mus.musculus)
organism = 'org.Mm.eg.db'
library(organism, character.only = TRUE)
library(biomaRt)
library(AnnotationDbi)
library(pheatmap)
library(annotables)
library(clusterProfiler)
library(enrichplot)
library(organism, character.only = TRUE)
library(DOSE)
library(EnhancedVolcano)
library(tidyverse)
grcm38 # mouse genes
my_logFC_threshold = 0.2
ARC <- readRDS("results/ARC_limma_results.RDS")
y1a <- readRDS("results/ARC_limma_results.RDS")
dc <- y1a %>% mutate(contrast = "Control vs. Stressed") %>% mutate(log10 = -log10(P.Value))
dc$diffexpressed <- "NO"
# if log2Foldchange > 0.6 and pvalue < 0.05, set as "UP"
dc$diffexpressed[dc$logFC > 0.2 & dc$P.Value < 0.05] <- "UP"
# if log2Foldchange < -0.6 and pvalue < 0.05, set as "DOWN"
dc$diffexpressed[dc$logFC < -0.2 & dc$P.Value < 0.05] <- "DOWN"
dcx <- dc %>% filter(.,logFC >= 1.75)%>% filter(P.Value < 0.05)
dcxx <- dc %>% filter(.,logFC <= -1.6) %>% filter(P.Value < 0.05)
dc$log10 <- ifelse(dc$log10 == Inf, 4,dc$log10)
# dcx <- dc %>% filter(.,abs(logFC) >= 1.5) %>% filter(P.Value < 0.05)
vp_ARC <- ggplot(data = dc,
aes(x = logFC,
y = log10,
colour=diffexpressed)) +
geom_point(alpha=0.25, size=3.5) +
scale_color_manual(values=c("orange2", "grey","blue3"))+
xlim(c(-2.5, 2.5)) +
ylim(0,4)+
# geom_vline(xintercept=c(-2.5,2.5),lty=4,col="black",lwd=0.8) +
geom_vline(xintercept=c(-.75,.75),lty=4,col="black",lwd=0.8) +
geom_vline(xintercept=c(-1.5,1.5),lty=4,col="black",lwd=0.8) +
geom_hline(yintercept = 1.301,lty=4,col="black",lwd=0.8) +
geom_text_repel(data = dcx, aes(x = logFC, y = -log10(P.Value),label = symbol), color = "black",vjust =1, hjust =.45)+
geom_text_repel(data = dcxx, aes(x = logFC, y = -log10(P.Value),label = symbol), color = "black", hjust = 1, vjust = -.55)+
labs(title = "A. Differential Gene Expression in ARC",
x="log2 Fold Change",
y=bquote(~-Log[10]~italic(eFDR)))+
theme_bw() +
annotate(geom="text", x=2.5, y=.5, label=paste0(" ", "\n", "Lower in Stressed"),
color="black", size = 5)+
annotate(geom="text", x=-2.5, y=.5, label=paste0(" ", "\n", "Higher in Stressed"),
color="black", size = 5)+
scale_x_continuous(limits = c(-3.5,3.5),breaks = c(-3,-2,-1,0,1,2,3))+
theme(axis.text.x = element_text(vjust = 1,size = 20),
# axis.ticks = element_blank(),
axis.text.y = element_text(hjust = 0.5,size = 20),
axis.text = element_text(color="#3C3C3C",size = 20),
axis.title = element_text(size = 20),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
strip.background = element_blank(),
strip.text.x = element_text(size = 20),
text = element_text(size = 20)
)
vp_ARC #875 x 550
### Number of genes in each cut off
#0.2
dc %>% filter(.,logFC >= .2)%>% filter(P.Value < 0.05) %>% summarise(n = nrow(.)) # 214
dc %>% filter(between(logFC, .2, .75))%>% filter(P.Value < 0.05) %>% summarise(n = nrow(.)) # 167
dc %>% filter(between(logFC, .75, 1.5))%>% filter(P.Value < 0.05) %>% summarise(n = nrow(.)) # 42
dc %>% filter(between(logFC, 1.5, 3))%>% filter(P.Value < 0.05) %>% summarise(n = nrow(.)) # 5
dc %>% filter(.,logFC <= -.2) %>% filter(P.Value < 0.05)%>% summarise(n = nrow(.)) # 216
dc %>% filter(between(logFC, -0.75, -0.2)) %>% filter(P.Value < 0.05)%>% summarise(n = nrow(.)) # 176
dc %>% filter(between(logFC, -1.5, -0.75)) %>% filter(P.Value < 0.05)%>% summarise(n = nrow(.))# 36
dc %>% filter(between(logFC, -3, -1.5)) %>% filter(P.Value < 0.05)%>% summarise(n = nrow(.)) # 4
#top 10 genes down in stressed
dc %>% filter(P.Value < 0.05) %>% arrange(-logFC) %>% head(., 10)
#top 10 genes up in stressed
dc %>% filter(P.Value < 0.05) %>%  arrange(logFC) %>% head(., 10)
################
y1a %>% filter(symbol == "Cartpt")
y1a %>% filter(entrez == "11604")
#875 x 550
ggplot(data = dc,
aes(x = logFC,
y = log10,
colour=diffexpressed)) +
geom_point(alpha=0.25, size=3.5) +
scale_color_manual(values=c("orange2", "grey","blue3"))+
xlim(c(-2.5, 2.5)) +
ylim(0,4)+
# geom_vline(xintercept=c(-2.5,2.5),lty=4,col="black",lwd=0.8) +
geom_vline(xintercept=c(-.75,.75),lty=4,col="black",lwd=0.8) +
geom_vline(xintercept=c(-1.5,1.5),lty=4,col="black",lwd=0.8) +
geom_hline(yintercept = 1.301,lty=4,col="black",lwd=0.8) +
geom_text_repel(data = dcx, aes(x = logFC, y = -log10(P.Value),label = symbol), color = "black",vjust =1, hjust =.45)+
geom_text_repel(data = dcxx, aes(x = logFC, y = -log10(P.Value),label = symbol), color = "black", hjust = 1, vjust = -.55)+
labs(title = "C. Differential Gene Expression in ARC",
x="log2 Fold Change",
y=bquote(~-Log[10]~italic(eFDR)))+
theme_bw() +
annotate(geom="text", x=2.5, y=.5, label=paste0(" ", "\n", "Lower in Stressed"),
color="black", size = 5)+
annotate(geom="text", x=-2.5, y=.5, label=paste0(" ", "\n", "Higher in Stressed"),
color="black", size = 5)+
scale_x_continuous(limits = c(-3.5,3.5),breaks = c(-3,-2,-1,0,1,2,3))+
theme(axis.text.x = element_text(vjust = 1,size = 20),
# axis.ticks = element_blank(),
axis.text.y = element_text(hjust = 0.5,size = 20),
axis.text = element_text(color="#3C3C3C",size = 20),
axis.title = element_text(size = 20),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
strip.background = element_blank(),
strip.text.x = element_text(size = 20),
text = element_text(size = 20))
