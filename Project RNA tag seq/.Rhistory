sources_down = paste(source[direction == "Down"], collapse = ", "),
description_up = paste(unique(description[direction == "Up"]), collapse = "; "),
description_down = paste(unique(description[direction == "Down"]), collapse = "; "),
.groups = "drop"
) %>%
filter(sources_up != "" & sources_down != "") %>% # Ensure there's at least one source for both "Up" and "Down"
arrange(symbol)
conflict_table <- combined %>%
group_by(symbol) %>%
filter(n_distinct(direction) > 1) %>% # Keep symbols with conflicting directions
summarize(
sources_up = paste(source[direction == "Up"], collapse = ", "),
sources_down = paste(source[direction == "Down"], collapse = ", "),
description = paste(unique(description), collapse = "; "),
.groups = "drop"
) %>%
filter(sources_up != "" & sources_down != "") %>% # Ensure there's at least one source for both "Up" and "Down"
arrange(symbol)
View(conflict_table)
overlap_table <- combined %>%
group_by(symbol, direction) %>%
summarize(
count = n_distinct(source),
sources = paste(unique(source), collapse = ", "),
description = paste(unique(description), collapse = "; "),
.groups = "drop"
) %>%
filter(count > 1) %>% # Remove cases with no overlap
arrange(desc(count)) %>%
select(symbol, direction, sources, description)
View(overlap_table)
write.csv(overlap_table,"results/results_tables/overlap_table.csv", row.names = F)
write.csv(conflict_table,"results/results_tables/conflict_table.csv", row.names = F)
overlap_table <- combined %>%
group_by(symbol, direction) %>%
summarize(
count = n_distinct(source),
sources = paste(unique(source), collapse = ", "),
description = paste(unique(description), collapse = "; "),
.groups = "drop"
) %>%
filter(count > 1) %>% # Remove cases with no overlap
arrange(desc(count, direction)) %>%
select(symbol, direction, sources, description)
overlap_table <- combined %>%
group_by(symbol, direction) %>%
summarize(
count = n_distinct(source),
sources = paste(unique(source), collapse = ", "),
description = paste(unique(description), collapse = "; "),
.groups = "drop"
) %>%
filter(count > 1) %>% # Remove cases with no overlap
arrange(desc(count)) %>%
arrange(desc(direction)) %>%
select(symbol, direction, sources, description)
write.csv(overlap_table,"results/results_tables/overlap_table.csv", row.names = F)
conflict_table <- combined %>%
group_by(symbol) %>%
filter(n_distinct(direction) > 1) %>% # Keep symbols with conflicting directions
summarize(
sources_up = paste(source[direction == "Up"], collapse = ", "),
sources_down = paste(source[direction == "Down"], collapse = ", "),
description = paste(unique(description), collapse = "; "),
.groups = "drop"
) %>%
filter(sources_up != "" & sources_down != "") %>% # Ensure there's at least one source for both "Up" and "Down"
arrange(sources_up)
conflict_table <- combined %>%
group_by(symbol) %>%
filter(n_distinct(direction) > 1) %>% # Keep symbols with conflicting directions
summarize(
sources_up = paste(source[direction == "Up"], collapse = ", "),
sources_down = paste(source[direction == "Down"], collapse = ", "),
description = paste(unique(description), collapse = "; "),
.groups = "drop"
) %>%
filter(sources_up != "" & sources_down != "") %>% # Ensure there's at least one source for both "Up" and "Down"
arrange(desc(sources_up))
write.csv(conflict_table,"results/results_tables/conflict_table.csv", row.names = F)
library(lme4)
library(lmerTest)
library(tidyverse)
library(ggpubr)
library(car)
library(rstatix)
bnp <- read.csv("raw_data/id.csv")
View(bnp)
bnp$group <- ifelse(bnp$group == "Stress", "Stressed")
bnp$group <- ifelse(bnp$group == "Stress", "Stressed",)
bnp$group <- ifelse(bnp$group == "Stress", "Stressed","Control")
View(bnp)
bnp <- read.csv("raw_data/id.csv")
View(bnp)
bnp$group <- ifelse(bnp$group == "Stress", "Stressed","Control")
View(bnp)
ggplot(bnp, aes(group, wt.day.15, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 0.8) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("white", "darkgray")) +
labs(title="A. P42 Weight",x="Group", y = "Grams") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
t.test(wt.day.15 ~ group, bnp)
bnp %>% group_by(group) %>% summarise_at(vars(wt.day.15), list(name=sd))
bnp %>% cohens_d(wt.day.15 ~ group)
ggplot(bnp, aes(group, wt.rate.pct, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 0.8) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("white", "darkgray")) +
labs(title="B. Rate of Weight Gain",x="Group", y = "% of P28 Weight Gained") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
t.test(wt.rate.pct ~ group, bnp)
bnp %>% group_by(group) %>% summarise_at(vars(wt.rate.pct), list(name=sd))
bnp %>% cohens_d(wt.rate.pct ~ group)
ggplot(bnp, aes(group, total.fat, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 0.8) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("white", "darkgray")) +
labs(title="C. Fat Mass",x="Group", y = "Grams") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
t.test(total.fat ~ group, bnp)
bnp %>% group_by(group) %>% summarise_at(vars(total.fat), list(name=sd))
bnp %>% cohens_d(total.fat ~ group)
ggplot(bnp, aes(group, food.total, fill=group)) +
stat_compare_means(method = "t.test", size = 6) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("white", "darkgray")) +
labs(title="Total Food Intake",x="Group", y = "Grams") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
t.test(food.total ~ group, bnp)
bnp %>% group_by(group) %>% summarise_at(vars(food.total), list(name=sd))
bnp %>% cohens_d(food.total ~ group)
ggplot(bnp, aes(group, food.eff, fill=group)) +
stat_compare_means(method = "t.test", size = 6, label.x = 0.8) +
geom_boxplot(outlier.shape=NA) +
geom_jitter(size = 4, position=position_jitter(0.15)) +
scale_fill_manual(values=c("white", "darkgray")) +
labs(title="D. Food Efficiency",x="Group", y = "Grams Gained/Grams Eaten") +
theme_classic() +
theme(axis.line = element_line(colour = 'black', size = 1),
axis.ticks = element_line(colour = "black", size = 1),
legend.position="none",
axis.text=element_text(size=16),
axis.title=element_text(size=18,face="bold"),
plot.title = element_text(size=24, hjust = 0.4))
t.test(food.eff ~ group, bnp)
bnp %>% group_by(group) %>% summarise_at(vars(food.eff), list(name=sd))
bnp %>% cohens_d(food.eff ~ group)
# [Control: 0.162 ± 0.025; Stressed: 0.191 ± 0.028; t(17.75) = 2.42, p < 0.05, d = 1.09]
# [Control: 0.162 ± 0.025; Stressed: 0.191 ± 0.028; t(17.75) = 2.42, p < 0.05, d = 1.09]
# [Control: 0.162 ± 0.025; Stressed: 0.191 ± 0.028; t(17.75) = 2.42, p < 0.05, d = 1.09]
# [Control: 0.162 ± 0.025; Stressed: 0.191 ± 0.028; t(17.75) = 2.42, p < 0.05, d = 1.09]
bnp <- read.csv("raw_data/id.csv")
View(bnp)
View(bnp)
sub <- read.csv("raw_data/rna_subjugation.csv")
View(sub)
sub <- read.csv("raw_data/rna_subjugation.csv")
library(tidyverse)
cts_with_unassigned <- read.csv("ham_brain_data/LH_counts.csv", row.names = "X")
lh.cts  <- cts_with_unassigned[-c(32317:32345),]
View(lh.cts)
dlNorm  <- cts_with_unassigned[-c(32317:32345),]
dlNorm  <- dlNorm [,-1]
coldata <- read.csv("ham_brain_data/LH_id.csv", row.names = "X")
coldata <- coldata[-1,]
dlNorm <- dlNorm[apply(dlNorm[], 1, function(x) !all(x==0)),]
dlNorm  <- dlNorm [, rownames(coldata)]
all(rownames(coldata) == colnames(dlNorm))
View(dlNorm)
y1a <- readRDS("results/LH_limma_results.RDS")
View(y1a)
View(lh.cts)
lh.cts1 <- t(lh.cts)
View(lh.cts1)
lh.cts1 <- as.data.frame(t(lh.cts))
View(lh.cts1)
row.names(lh.cts1) <- gsub("LH", "KM")
row.names(lh.cts1) <- gsub("LH", "KM", lh.cts1)
gsub("LH", "KM", lh.cts1)
row.names(lh.cts1) <- gsub("LH", "KM", row.names(lh.cts1))
View(lh.cts1)
lh.cts1 %>%
select("Npvf","Hmx2","Mc3r","Ghrh")
lh.top.cts <- lh.cts1 %>%
select("Npvf","Hmx2","Mc3r","Ghrh","Nmb","Smim32","Ghdc","Ghdc","Bmp3","Nmu")
join(sub,lh.top.cts)
left_join(sub,lh.top.cts)
lh.top.cts$subject <- rownames(lh.top.cts)
left_join(sub,lh.top.cts)
c_df <- Hmisc::rcorr(cor(correlation_df), type='spearman')
lhsubcts <- left_join(sub,lh.top.cts)
c_df <- Hmisc::rcorr(cor(lhsubcts), type='spearman')
View(lhsubcts)
install.packages("PerformanceAnalytics")
lhset1 <- lhsubcts[, 3:7]
lhset2 <- lhsubcts[, 8:16]
lh.cor_matrix <- cor(lhset1, lhset2, use = "complete.obs")
lh.cor_matrix
lh.combined_data <- lhsubcts[, c(3:7, 8:16)]
chart.Correlation(lh.combined_data, histogram = TRUE, pch = 19)
library(PerformanceAnalytics)
chart.Correlation(lh.combined_data, histogram = TRUE, pch = 19)
library(corrplot)
corrplot(lh.cor_matrix, method = "color", type = "full",
tl.col = "black", tl.srt = 45, addCoef.col = "black")
sub <- read.csv("raw_data/rna_subjugation.csv")
cts_with_unassigned <- read.csv("ham_brain_data/LH_counts.csv", row.names = "X")
lh.cts  <- cts_with_unassigned[-c(32317:32345),]
lh.cts1 <- as.data.frame(t(lh.cts))
row.names(lh.cts1) <- gsub("LH", "KM", row.names(lh.cts1))
lh.top.cts <- lh.cts1 %>%
select("Npvf","Hmx2","Mc3r","Ghrh","Nmb","Smim32","Ghdc","Ghdc","Bmp3","Nmu")
lh.top.cts$subject <- rownames(lh.top.cts)
lhsubcts <- left_join(sub,lh.top.cts)
lhset2 <- lhsubcts[, 6:14]
lh.cor_matrix <- cor(lhset1, lhset2, use = "complete.obs")
corrplot(lh.cor_matrix, method = "color", type = "full",
tl.col = "black", tl.srt = 45, addCoef.col = "black")
# only doing avg. attacks, tails, and scents, since the other two occurrences were so low.
library(tidyverse)
library(corrplot)
sub <- read.csv("raw_data/rna_subjugation.csv")
# first with the top genes in LH
cts_with_unassigned <- read.csv("ham_brain_data/LH_counts.csv", row.names = "X")
lh.cts  <- cts_with_unassigned[-c(32317:32345),]
lh.cts1 <- as.data.frame(t(lh.cts))
row.names(lh.cts1) <- gsub("LH", "KM", row.names(lh.cts1))
lh.top.cts <- lh.cts1 %>%
select("Npvf","Hmx2","Mc3r","Ghrh","Nmb","Smim32","Ghdc","Ghdc","Bmp3","Nmu")
lh.top.cts$subject <- rownames(lh.top.cts)
lhsubcts <- left_join(sub,lh.top.cts)
# TO DO : CORR MATRIX
lhset1 <- lhsubcts[, 3:5]
lhset2 <- lhsubcts[, 6:14]
lh.cor_matrix <- cor(lhset1, lhset2, use = "complete.obs")
corrplot(lh.cor_matrix, method = "color", type = "full",
tl.col = "black", tl.srt = 45, addCoef.col = "black")
lh.cor_results <- rcorr(as.matrix(lhsubcts[, c(3:7, 8:16)]))
lh.cor_matrix <- lh.cor_results$r[3:7, 8:16]
lh.p_matrix <- lh.cor_results$P[3:7, 8:16]
library(Hmisc)
lh.cor_results <- rcorr(as.matrix(lhsubcts[, c(3:7, 8:16)]))
lh.cor_matrix <- lh.cor_results$r[3:7, 8:16]
rcorr(as.matrix(lhsubcts[, c(3:7, 8:16)]))
lh.cor_results <- rcorr(as.matrix(lhsubcts[, c(3:5, 6:14)]))
lh.cor_matrix <- lh.cor_results$r[3:5, 6:14]
View(lh.cor_results)
lh.cor_results <- rcorr(as.matrix(lhsubcts[, c(3:5, 6:14)]))
lh.cor_matrix <- lh.cor_results$r[1:3, 4:12]
lh.p_matrix <- lh.cor_results$P[1:3, 4:12]
corrplot(lh.cor_matrix,
method = "circle",          # Visualization method
p.mat = lh.p_matrix,           # Matrix of p-values
insig = "label_sig",        # Show significance labels
sig.level = c(0.001, 0.01, 0.05), # Significance levels
pch.cex = 0.9,             # Size of significance markers
pch.col = "white",          # Color of significance markers
tl.col = "black",           # Text label color
tl.cex = 0.8,               # Text label size
cl.cex = 0.8,               # Color legend size
mar = c(0, 0, 1, 0))       # Plot margins (bottom, left, top, right)
corrplot(lh.cor_matrix,
method = "number",         # Show correlation coefficients
addCoef.col = "black",     # Color for coefficients
number.cex = 0.7,          # Size of coefficients
p.mat = lh.p_matrix,
insig = "label_sig",
sig.level = c(0.001, 0.01, 0.05),
tl.col = "black",
tl.cex = 0.8,
mar = c(0, 0, 1, 0))
cts_with_unassigned <- read.csv("ham_brain_data/DMH_counts.csv", row.names = "X")
dmh.cts  <- cts_with_unassigned[-c(32317:32345),]
dmh.cts1 <- as.data.frame(t(dmh.cts))
row.names(dmh.cts1) <- gsub("DMH", "KM", row.names(dmh.cts1))
dmh.top.cts <- dmh.cts1 %>%
select("Npw","Lrp2","Lrrc9","Gpr50","Atp7b","Gabpb2","Izumo1","Cd68","Tagln","Cbl")
dmh.top.cts$subject <- rownames(dmh.top.cts)
dmhsubcts <- left_join(sub,dmh.top.cts)
dmh.cor_results <- rcorr(as.matrix(dmhsubcts[, c(3:5, 6:14)]))
dmh.cor_matrix <- dmh.cor_results$r[1:3, 4:12]
dmh.p_matrix <- dmh.cor_results$P[1:3, 4:12]
corrplot(dmh.cor_matrix,
method = "number",         # Show correlation coefficients
addCoef.col = "black",     # Color for coefficients
number.cex = 0.7,          # Size of coefficients
p.mat = dmh.p_matrix,
insig = "label_sig",
sig.level = c(0.001, 0.01, 0.05),
tl.col = "black",
tl.cex = 0.8,
mar = c(0, 0, 1, 0))
corrplot(dmh.cor_matrix,
method = "number",         # Show correlation coefficients
addCoef.col = "black",     # Color for coefficients
number.cex = 0.7,          # Size of coefficients
p.mat = dmh.p_matrix,
insig = "label_sig",
sig.level = c(0.001, 0.01, 0.05),
tl.col = "black",
tl.cex = 0.8,
mar = c(0, 0, 1, 0),
number.d.offset = 0.3)
cts_with_unassigned <- read.csv("ham_brain_data/ARC_counts.csv", row.names = "X")
arc.cts  <- cts_with_unassigned[-c(32317:32345),]
arc.cts1 <- as.data.frame(t(arc.cts))
row.names(arc.cts1) <- gsub("ARC", "KM", row.names(arc.cts1))
arc.top.cts <- arc.cts1 %>%
select("Irx2","Micall1","Steap1","Il18r1","Rbxo43","Aqp1","Trim10","Myo3a","Edn3","Ncf2")
arcsubcts <- left_join(sub,arc.top.cts)
arc.cor_results <- rcorr(as.matrix(arcsubcts[, c(3:5, 6:14)]))
arc.cor_matrix <- arc.cor_results$r[1:3, 4:12]
arc.p_matrix <- arc.cor_results$P[1:3, 4:12]
corrplot(arc.cor_matrix,
method = "number",         # Show correlation coefficients
addCoef.col = "black",     # Color for coefficients
number.cex = 0.7,          # Size of coefficients
p.mat = arc.p_matrix,
insig = "label_sig",
sig.level = c(0.001, 0.01, 0.05),
tl.col = "black",
tl.cex = 0.8,
mar = c(0, 0, 1, 0))
cts_with_unassigned <- read.csv("ham_brain_data/ARC_counts.csv", row.names = "X")
arc.cts  <- cts_with_unassigned[-c(32317:32345),]
arc.cts1 <- as.data.frame(t(arc.cts))
row.names(arc.cts1) <- gsub("ARC", "KM", row.names(arc.cts1))
arc.top.cts <- arc.cts1 %>%
select("Irx2","Micall1","Steap1","Il18r1","Rbxo43","Aqp1","Trim10","Myo3a","Edn3","Ncf2")
arc.top.cts <- arc.cts1 %>%
select("Irx2","Micall1","Steap1","Il18r1","Rbox43","Aqp1","Trim10","Myo3a","Edn3","Ncf2")
arc.top.cts <- arc.cts1 %>%
select("Irx2","Micall1","Steap1","Il18r1","Fbxo43","Aqp1","Trim10","Myo3a","Edn3","Ncf2")
arc.top.cts$subject <- rownames(arc.top.cts)
arcsubcts <- left_join(sub,arc.top.cts)
arc.cor_results <- rcorr(as.matrix(arcsubcts[, c(3:5, 6:14)]))
arc.cor_matrix <- arc.cor_results$r[1:3, 4:12]
arc.p_matrix <- arc.cor_results$P[1:3, 4:12]
corrplot(arc.cor_matrix,
method = "number",         # Show correlation coefficients
addCoef.col = "black",     # Color for coefficients
number.cex = 0.7,          # Size of coefficients
p.mat = arc.p_matrix,
insig = "label_sig",
sig.level = c(0.001, 0.01, 0.05),
tl.col = "black",
tl.cex = 0.8,
mar = c(0, 0, 1, 0))
corrplot(lh.cor_matrix,
method = "number",         # Show correlation coefficients
addCoef.col = "black",     # Color for coefficients
number.cex = 0.7,          # Size of coefficients
p.mat = lh.p_matrix,
insig = "label_sig",
sig.level = c(0.001, 0.01, 0.05),
tl.col = "black",
tl.cex = 0.8,
mar = c(0, 0, 1, 0))
with(rcorr(as.matrix(lhsubcts[, c(3:5, 6:14)])), {
corrplot(r[1:3, 4:12], method = "number", number.cex = 0.9)
text(col(r[1:3, 4:12]) + 0.25,
nrow(r[1:3, 4:12]) - row(r[1:3, 4:12]) + 1,
labels = ifelse(P[1:3, 4:12] < 0.001, "***",
ifelse(P[1:3, 4:12] < 0.01, "**",
ifelse(P[1:3, 4:12] < 0.05, "*", ""))),
col = "red", cex = 1.1)
legend("topright",
legend = c("*** p < 0.001", "** p < 0.01", "* p < 0.05"),
text.col = "red", bty = "n", cex = 0.8)
})
with(rcorr(as.matrix(dmhsubcts[, c(3:5, 6:14)])), {
corrplot(r[1:3, 4:12], method = "number", number.cex = 0.9)
text(col(r[1:3, 4:12]) + 0.25,
nrow(r[1:3, 4:12]) - row(r[1:3, 4:12]) + 1,
labels = ifelse(P[1:3, 4:12] < 0.001, "***",
ifelse(P[1:3, 4:12] < 0.01, "**",
ifelse(P[1:3, 4:12] < 0.05, "*", ""))),
col = "red", cex = 1.1)
legend("topright",
legend = c("*** p < 0.001", "** p < 0.01", "* p < 0.05"),
text.col = "red", bty = "n", cex = 0.8)
})
with(rcorr(as.matrix(arcsubcts[, c(3:5, 6:14)])), {
corrplot(r[1:3, 4:12], method = "number", number.cex = 0.9)
text(col(r[1:3, 4:12]) + 0.25,
nrow(r[1:3, 4:12]) - row(r[1:3, 4:12]) + 1,
labels = ifelse(P[1:3, 4:12] < 0.001, "***",
ifelse(P[1:3, 4:12] < 0.01, "**",
ifelse(P[1:3, 4:12] < 0.05, "*", ""))),
col = "red", cex = 1.1)
legend("topright",
legend = c("*** p < 0.001", "** p < 0.01", "* p < 0.05"),
text.col = "red", bty = "n", cex = 0.8)
})
corrplot(r[1:3, 4:12], method = "number", number.cex = 0.9, title = "LH genes and Subjugation Correlations")
with(rcorr(as.matrix(lhsubcts[, c(3:5, 6:14)])), {
corrplot(r[1:3, 4:12], method = "number", number.cex = 0.9, title = "LH genes and Subjugation Correlations")
text(col(r[1:3, 4:12]) + 0.25,
nrow(r[1:3, 4:12]) - row(r[1:3, 4:12]) + 1,
labels = ifelse(P[1:3, 4:12] < 0.001, "***",
ifelse(P[1:3, 4:12] < 0.01, "**",
ifelse(P[1:3, 4:12] < 0.05, "*", ""))),
col = "black", cex = 1.1)
legend("topright",
legend = c("*** p < 0.001", "** p < 0.01", "* p < 0.05"),
text.col = "black", bty = "n", cex = 0.8)
})
corrplot(r[1:3, 4:12], method = "number", number.cex = 0.9, title = "DMH genes and Subjugation Correlations")
with(rcorr(as.matrix(dmhsubcts[, c(3:5, 6:14)])), {
corrplot(r[1:3, 4:12], method = "number", number.cex = 0.9, title = "DMH genes and Subjugation Correlations")
text(col(r[1:3, 4:12]) + 0.25,
nrow(r[1:3, 4:12]) - row(r[1:3, 4:12]) + 1,
labels = ifelse(P[1:3, 4:12] < 0.001, "***",
ifelse(P[1:3, 4:12] < 0.01, "**",
ifelse(P[1:3, 4:12] < 0.05, "*", ""))),
col = "black", cex = 1.1)
legend("topright",
legend = c("*** p < 0.001", "** p < 0.01", "* p < 0.05"),
text.col = "black", bty = "n", cex = 0.8)
})
with(rcorr(as.matrix(arcsubcts[, c(3:5, 6:14)])), {
corrplot(r[1:3, 4:12], method = "number", number.cex = 0.9, title = "ARC genes and Subjugation Correlations")
text(col(r[1:3, 4:12]) + 0.25,
nrow(r[1:3, 4:12]) - row(r[1:3, 4:12]) + 1,
labels = ifelse(P[1:3, 4:12] < 0.001, "***",
ifelse(P[1:3, 4:12] < 0.01, "**",
ifelse(P[1:3, 4:12] < 0.05, "*", ""))),
col = "black", cex = 1.1)
legend("topright",
legend = c("*** p < 0.001", "** p < 0.01", "* p < 0.05"),
text.col = "black", bty = "n", cex = 0.8)
})
corrplot(r[1:3, 4:12], method = "number", number.cex = 0.9,  mar = c(0, 0, 3, 0), title = "LH genes and Subjugation Correlations")
with(rcorr(as.matrix(lhsubcts[, c(3:5, 6:14)])), {
corrplot(r[1:3, 4:12], method = "number", number.cex = 0.9,  mar = c(0, 0, 3, 0), title = "LH genes and Subjugation Correlations")
text(col(r[1:3, 4:12]) + 0.25,
nrow(r[1:3, 4:12]) - row(r[1:3, 4:12]) + 1,
labels = ifelse(P[1:3, 4:12] < 0.001, "***",
ifelse(P[1:3, 4:12] < 0.01, "**",
ifelse(P[1:3, 4:12] < 0.05, "*", ""))),
col = "black", cex = 1.1)
legend("topright",
legend = c("*** p < 0.001", "** p < 0.01", "* p < 0.05"),
text.col = "black", bty = "n", cex = 0.8)
})
corrplot(r[1:3, 4:12], method = "number", number.cex = 0.9, mar = c(0, 0, 3, 0),title = "DMH genes and Subjugation Correlations")
with(rcorr(as.matrix(dmhsubcts[, c(3:5, 6:14)])), {
corrplot(r[1:3, 4:12], method = "number", number.cex = 0.9, mar = c(0, 0, 3, 0),title = "DMH genes and Subjugation Correlations")
text(col(r[1:3, 4:12]) + 0.25,
nrow(r[1:3, 4:12]) - row(r[1:3, 4:12]) + 1,
labels = ifelse(P[1:3, 4:12] < 0.001, "***",
ifelse(P[1:3, 4:12] < 0.01, "**",
ifelse(P[1:3, 4:12] < 0.05, "*", ""))),
col = "black", cex = 1.1)
legend("topright",
legend = c("*** p < 0.001", "** p < 0.01", "* p < 0.05"),
text.col = "black", bty = "n", cex = 0.8)
})
with(rcorr(as.matrix(dmhsubcts[, c(3:5, 6:14)])), {
corrplot(r[1:3, 4:12], method = "number", number.cex = 0.9, mar = c(0, 0, 3, 0),title = "DMH genes and Subjugation Correlations")
text(col(r[1:3, 4:12]) + 0.25,
nrow(r[1:3, 4:12]) - row(r[1:3, 4:12]) + 1,
labels = ifelse(P[1:3, 4:12] < 0.001, "***",
ifelse(P[1:3, 4:12] < 0.01, "**",
ifelse(P[1:3, 4:12] < 0.05, "*", ""))),
col = "black", cex = 1.1)
legend("topright",
legend = c("*** p < 0.001", "** p < 0.01", "* p < 0.05"),
text.col = "black", bty = "n", cex = 0.8)
})
corrplot(r[1:3, 4:12], method = "number", number.cex = 0.9, mar = c(0, 0, 3, 0), title = "ARC genes and Subjugation Correlations")
with(rcorr(as.matrix(arcsubcts[, c(3:5, 6:14)])), {
corrplot(r[1:3, 4:12], method = "number", number.cex = 0.9, mar = c(0, 0, 3, 0), title = "ARC genes and Subjugation Correlations")
text(col(r[1:3, 4:12]) + 0.25,
nrow(r[1:3, 4:12]) - row(r[1:3, 4:12]) + 1,
labels = ifelse(P[1:3, 4:12] < 0.001, "***",
ifelse(P[1:3, 4:12] < 0.01, "**",
ifelse(P[1:3, 4:12] < 0.05, "*", ""))),
col = "black", cex = 1.1)
legend("topright",
legend = c("*** p < 0.001", "** p < 0.01", "* p < 0.05"),
text.col = "black", bty = "n", cex = 0.8)
})
